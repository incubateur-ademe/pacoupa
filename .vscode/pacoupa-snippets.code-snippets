{
	// Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"React tsx Component with children": {
		"prefix": "rcx",
        "scope": "typescriptreact",
		"body": [
			"import { type PropsWithChildren } from \"react\";",
			"",
			"type Props = {",
			"  ${2:otherProp}: ${3:string};",
			"};",
			"",
			"export const ${1:ComponentName} = ({ children, ${2:otherProp} }: PropsWithChildren<Props>) => {",
			"  return <>{${0:children}}</>;",
			"};",
		],
	},
	"Next page": {
		"prefix": "nxp",
        "scope": "typescriptreact",
		"body": [
			"const ${1:PageName} = () => {",
			"  return <>$0</>;",
			"};",
			"",
			"export default ${1:PageName};",
			"",
		],
	},
	"Next page with metadata": {
		"prefix": "nxpmeta",
        "scope": "typescriptreact",
		"body": [
			"import { type Metadata } from \"next\";",
			"",
			"import { config } from \"@/config\";",
			"",
			"import { sharedMetadata } from \"./shared-metadata\";",
			"",
			"const title = `${2:Accueil} - ${config.name}`;",
			"const url = \"${3:/}\";",
			"",
			"export const metadata: Metadata = {",
			"  ...sharedMetadata,",
			"  title,",
			"  openGraph: {",
			"    ...sharedMetadata.openGraph,",
			"    title,",
			"    url,",
			"  },",
			"  alternates: {",
			"    canonical: url,",
			"  },",
			"};",
			"",
			"const ${1:PageName} = () => {",
			"  return <>$0</>;",
			"};",
			"",
			"export default ${1:PageName};",
			"",
		],
	},
	"Log output to console": {
		"prefix": "log",
        "scope": "javascript,typescript",
		"body": [
			"console.log({$1});",
			"$0"
		],
	}
}
